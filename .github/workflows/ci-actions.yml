name: Quarkus CI

on:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths-ignore:
      - 'docs/src/main/asciidoc/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'ADOPTERS.md'
      - 'LICENSE.txt'
      - 'dco.txt'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/autoissuelabeler.yml'
      - '.github/boring-cyborg.yml'
      - '.github/NativeBuildReport.kts'
      - '.dependabot/**'
  pull_request:
    types: [assigned, opened, synchronize, reopened, ready_for_review, edited]
    paths-ignore:
      - 'docs/src/main/asciidoc/**'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'ADOPTERS.md'
      - 'LICENSE.txt'
      - 'dco.txt'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/autoissuelabeler.yml'
      - '.github/boring-cyborg.yml'
      - '.github/NativeBuildReport.kts'
      - '.dependabot/**'

env:
  # Workaround testsuite locale issue
  LANG: en_US.UTF-8
  NATIVE_TEST_MAVEN_OPTS: "-B --settings azure-mvn-settings.xml -Dquarkus.native.container-build=true -Dtest-postgresql -Dtest-elasticsearch -Dtest-keycloak -Dtest-dynamodb -Dtest-mysql -Dtest-mariadb -Dmariadb.url='jdbc:mariadb://localhost:3308/hibernate_orm_test'  -Dtest-mssql -Dtest-vault -Dtest-neo4j -Dnative-image.xmx=6g -Dnative -Dno-format install"
  JVM_TEST_MAVEN_OPTS: "-e -B --settings azure-mvn-settings.xml -Dtest-postgresql -Dtest-elasticsearch -Dtest-mysql -Dtest-mariadb -Dmariadb.url='jdbc:mariadb://localhost:3308/hibernate_orm_test'  -Dtest-mssql -Dtest-dynamodb -Dtest-vault -Dtest-neo4j -Dtest-keycloak -Dno-format"
  DB_USER: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_NAME: hibernate_orm_test
jobs:
  build-jdk8:
    name: "JDK 8 Build"
    runs-on: ubuntu-latest
    # Skip draft PRs and those with WIP in the subject, rerun as soon as its removed
    if: "github.event_name != 'pull_request' || ( \
           github.event.pull_request.draft == false && \
           github.event.pull_request.state != 'closed' && \
           contains(github.event.pull_request.title, 'wip ') == false && \
           contains(github.event.pull_request.title, '[wip]') == false && \
           (
             github.event.action != 'edited' || \
             contains(github.event.changes.title.from, 'wip ') || \
             contains(github.event.changes.title.from, '[wip]') \
           ) \
         )"
    steps:
      - uses: actions/checkout@v2
      - uses: n1hility/cancel-previous-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK 8
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@7134ae95986e4e0a4f9f0b51345c93fcebfc4ea9
        with:
          java-version: openjdk8
      - name: Compute cache restore key
        # Always recompute on a push so that the maven repo doesnt grow indefinitely with old versions
        run: |
           if ${{ github.event_name == 'pull_request' }}; then echo "::set-env name=COMPUTED_RESTORE_KEY::q2maven-"; fi
      - name: Cache Maven Repository
        id: cache-maven
        uses: n1hility/cache@v2
        with:
          path: ~/.m2/repository
          # Improves the reusability of the cache to limit key changes
          key: q2maven-${{ hashFiles('bom/runtime/pom.xml') }}
          restore-keys: ${{ env.COMPUTED_RESTORE_KEY }}
          restore-only: ${{ github.event_name == 'pull_request' }}
      - name: Build
        run: |
          mvn -e -B  -DskipTests=true -Dno-format -DskipDocs clean install
      - name: Tar Maven Repo
        shell: bash
        run: tar -czvf maven-repo.tgz -C ~ .m2/repository
      - name: Persist Maven Repo
        uses: actions/upload-artifact@v1
        with:
          name: maven-repo
          path: maven-repo.tgz
      - name: Cleanup Cache
        shell: bash
        run: |
          find ~/.m2/repositoiry/io/quarkus/ -mindepth 1 -maxdepth 1 \( ! -name http -a ! -name gizmo -a ! -name security \) -exec echo {} \; -exec rm -rf {} \; || true

  windows-jdk8-jvm-tests:
    name: Windows JDK 8 JVM Tests
    needs: build-jdk8
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      MAVEN_OPTS: -Xmx1408m
   
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@7134ae95986e4e0a4f9f0b51345c93fcebfc4ea9
        with:
          java-version: openjdk8
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzvf maven-repo.tgz -C ~
      - name: Build with Maven
        shell: bash
        run: mvn -X -B --settings azure-mvn-settings.xml -Dno-native -Dno-format install -f extensions/kubernetes/deployment/pom.xml